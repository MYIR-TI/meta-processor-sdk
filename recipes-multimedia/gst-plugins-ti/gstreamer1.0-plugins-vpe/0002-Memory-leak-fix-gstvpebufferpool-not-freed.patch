From e249f6942130a06b98de10458ce0e10a40cc0afc Mon Sep 17 00:00:00 2001
From: Harinarayan Bhatta <harinarayan@ti.com>
Date: Wed, 29 Apr 2015 15:04:25 +0530
Subject: [PATCH] Memory leak fix: gstvpebufferpool not freed

To make sure that vpebufferpool instances are destroyed only
after all vpebuffers are freed, each vpebuffer had a reference
to the parent vpebufferpool instance. This mechanism did not
work in some scenarios after GST 1.x migration, and caused
the vpebufferpool instances to be not freed.

Now, since this functionality is implementated in gstbufferpool
base class itself, it is removed from here.

Signed-off-by: Harinarayan Bhatta <harinarayan@ti.com>
---
 src/gstvpe.h           |  1 -
 src/gstvpebuffer.c     |  1 -
 src/gstvpebufferpool.c | 11 -----------
 3 files changed, 13 deletions(-)

diff --git a/src/gstvpe.h b/src/gstvpe.h
index d1233f5..f79281d 100644
--- a/src/gstvpe.h
+++ b/src/gstvpe.h
@@ -98,7 +98,6 @@ typedef struct
   struct omap_bo *bo;
   struct v4l2_buffer v4l2_buf;
   struct v4l2_plane v4l2_planes[2];
-  GstVpeBufferPool *pool;
 } GstMetaVpeBuffer;
 
 
diff --git a/src/gstvpebuffer.c b/src/gstvpebuffer.c
index 8a1cbda..ea23c94 100644
--- a/src/gstvpebuffer.c
+++ b/src/gstvpebuffer.c
@@ -111,7 +111,6 @@ gst_buffer_add_vpe_buffer_meta (GstBuffer * buf, struct omap_device * dev,
     goto fail;
 
   vpebuf->size = 0;
-  vpebuf->pool = NULL;
   vpebuf->bo = NULL;
   memset (&vpebuf->v4l2_buf, 0, sizeof (vpebuf->v4l2_buf));
   memset (&vpebuf->v4l2_planes, 0, sizeof (vpebuf->v4l2_planes));
diff --git a/src/gstvpebufferpool.c b/src/gstvpebufferpool.c
index dbb8491..a1e94fb 100644
--- a/src/gstvpebufferpool.c
+++ b/src/gstvpebufferpool.c
@@ -155,20 +155,9 @@ gst_vpe_buffer_pool_put (GstVpeBufferPool * pool, GstBuffer * buffer)
       buffer);
 
   if (pool->shutting_down) {
-    p = buf->pool;
-    buf->pool = NULL;
     GST_VPE_BUFFER_POOL_UNLOCK (pool);
-    if (p)
-      gst_object_unref (G_OBJECT (p));
     return FALSE;
   } else {
-    /* Each buffer that belongs to a pool has a reference to the
-     * pool itself so that the pool is freed only after all buffers
-     * are freed */
-    if (buf->pool == NULL) {
-      buf->pool = (GstVpeBufferPool *)
-          gst_object_ref (G_OBJECT (pool));
-    }
     if (pool->output_port && pool->streaming) {
       int r;
       /* QUEUE this buffer into the driver */
-- 
1.9.1

