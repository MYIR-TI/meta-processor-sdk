From 4879a3aece62d661778c45b28efdcfbcf0e27b9d Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Wed, 7 Jun 2017 16:36:17 -0400
Subject: [PATCH 50/51] prueth: use constants for busy/overflow bits

Instead of hardcoded values, use constants for the status/overflow
bits.

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
Signed-off-by: Jacob Stiffler <j-stiffler@ti.com>
---
 drivers/net/ethernet/ti/prueth.c | 9 +++++----
 drivers/net/ethernet/ti/prueth.h | 4 ++++
 2 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/ti/prueth.c b/drivers/net/ethernet/ti/prueth.c
index ad7f831..ba30e89 100644
--- a/drivers/net/ethernet/ti/prueth.c
+++ b/drivers/net/ethernet/ti/prueth.c
@@ -1811,7 +1811,7 @@ static int prueth_tx_enqueue(struct prueth_emac *emac, struct sk_buff *skb,
 	int ret;
 	bool colq_selected = false;
 	void __iomem *sram = NULL;
-	u8 status, busy_m = 0x1;
+	u8 status;
 
 	switch (emac->port_id) {
 	case PRUETH_PORT_MII0:
@@ -1850,7 +1850,7 @@ static int prueth_tx_enqueue(struct prueth_emac *emac, struct sk_buff *skb,
 	if (emac->tx_colq_descs) {
 		/* Switch needs to handle tx collision */
 		status = readb(&queue_desc->status);
-		if (status & busy_m) {
+		if (status & PRUETH_MASTER_QUEUE_BUSY) {
 			/* Tx q busy, put pkt in col Q */
 			++emac->tx_collisions;
 			status = readb(dram + COLLISION_STATUS_ADDR + txport);
@@ -1871,7 +1871,7 @@ static int prueth_tx_enqueue(struct prueth_emac *emac, struct sk_buff *skb,
 			 * by checking busy_m bit
 			 */
 			status = readb(&queue_desc->status);
-			if (status & busy_m) {
+			if (status & PRUETH_MASTER_QUEUE_BUSY) {
 				/* Nope. Clear busy_s bit */
 				writeb(0x0, &queue_desc->busy_s);
 
@@ -2150,7 +2150,8 @@ static int emac_rx_packets(struct prueth_emac *emac, int quota)
 		rxqueue = &queue_infos[PRUETH_PORT_HOST][i];
 
 		status = readb(&queue_desc->status);
-		if (status & 0x04) {
+		/* check overflow status */
+		if (status & PRUETH_PACKET_DISCARD_OVFL) {
 			emac->rx_overflows++;
 			if (PRUETH_HAS_SWITCH(prueth)) {
 				other_emac = prueth->emac[emac->port_id ^ 0x3];
diff --git a/drivers/net/ethernet/ti/prueth.h b/drivers/net/ethernet/ti/prueth.h
index f85f516..0d6a0fb 100644
--- a/drivers/net/ethernet/ti/prueth.h
+++ b/drivers/net/ethernet/ti/prueth.h
@@ -43,6 +43,10 @@ struct prueth_queue_desc {
 	u8 overflow_cnt;
 } __packed;
 
+/* status flags */
+#define PRUETH_MASTER_QUEUE_BUSY		BIT(0)
+#define PRUETH_PACKET_IN_COLLISION_QUEUE	BIT(1)
+#define PRUETH_PACKET_DISCARD_OVFL		BIT(2)
 /**
  * struct prueth_queue - Information about a queue in memory
  * @buffer_offset: buffer offset in OCMC RAM
-- 
1.9.1

