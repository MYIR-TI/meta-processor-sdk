From 6d654f28bc468047d78d121060a243a98a6ed163 Mon Sep 17 00:00:00 2001
From: Eric Ruei <e-ruei1@ti.com>
Date: Wed, 3 Jan 2018 10:17:06 -0500
Subject: [PATCH 152/153] net:ethernet:ti:cpts: add cpts_fifo_read() within
 spin_lock protection

The cpts_fifo_read() is designed to be always within the spin_lock
protection area, otherwise, the CPTS EVENT_POP may be written multiple
times without popping the actual event causing one or more events got
lost. This patch moves the cpts_fifo_read() into the spin_lock protection
area at function cpts_pps_schedule() to fix the event loss issue.

Signed-off-by: Eric Ruei <e-ruei1@ti.com>
---
 drivers/net/ethernet/ti/cpts.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/ti/cpts.c b/drivers/net/ethernet/ti/cpts.c
index 03c7929..08c0fea2 100644
--- a/drivers/net/ethernet/ti/cpts.c
+++ b/drivers/net/ethernet/ti/cpts.c
@@ -501,9 +501,8 @@ static void cpts_pps_schedule(struct cpts *cpts)
 	unsigned long flags;
 	bool reported;
 
-	cpts_fifo_read(cpts, -1);
-
 	spin_lock_irqsave(&cpts->lock, flags);
+	cpts_fifo_read(cpts, -1);
 	reported = cpts_proc_pps_ts_events(cpts);
 	spin_unlock_irqrestore(&cpts->lock, flags);
 
-- 
1.9.1

