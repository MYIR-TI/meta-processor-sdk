From 4230efe088ce9a5d9c1c560a13319b36d1dc12ea Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Wed, 22 Feb 2017 13:07:39 -0500
Subject: [PATCH 23/43] hsr/prp: add vlan support

This patch add support for creating vlan interfaces
over hsr/prp interface.

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
Signed-off-by: Jacob Stiffler <j-stiffler@ti.com>
---
 net/hsr-prp/hsr_prp_device.c  | 5 +----
 net/hsr-prp/hsr_prp_forward.c | 8 +++-----
 net/hsr-prp/hsr_prp_main.h    | 1 -
 net/hsr-prp/hsr_prp_slave.c   | 9 ++-------
 4 files changed, 6 insertions(+), 17 deletions(-)

diff --git a/net/hsr-prp/hsr_prp_device.c b/net/hsr-prp/hsr_prp_device.c
index 1937065..f29385b 100644
--- a/net/hsr-prp/hsr_prp_device.c
+++ b/net/hsr-prp/hsr_prp_device.c
@@ -433,10 +433,7 @@ static void hsr_prp_dev_setup(struct net_device *ndev, struct device_type *type)
 
 	/* Prevent recursive tx locking */
 	ndev->features |= NETIF_F_LLTX;
-	/* VLAN on top of HSR needs testing and probably some work on
-	 * hsr_header_create() etc.
-	 */
-	ndev->features |= NETIF_F_VLAN_CHALLENGED;
+
 	/* Not sure about this. Taken from bridge code. netdev_features.h says
 	 * it means "Does not change network namespaces".
 	 */
diff --git a/net/hsr-prp/hsr_prp_forward.c b/net/hsr-prp/hsr_prp_forward.c
index 8bb703d..4e4ffe4 100644
--- a/net/hsr-prp/hsr_prp_forward.c
+++ b/net/hsr-prp/hsr_prp_forward.c
@@ -274,9 +274,10 @@ static struct sk_buff *create_tagged_skb(struct sk_buff *skb_o,
 	struct sk_buff *skb;
 
 	if (port->priv->prot_version > HSR_V1) {
-		skb = skb_copy_expand(skb_o, 0,
+		skb = skb_copy_expand(skb_o, skb_headroom(skb_o),
 				      skb_tailroom(skb_o) + HSR_PRP_HLEN,
 				      GFP_ATOMIC);
+
 		prp_fill_rct(skb, frame, port);
 		return skb;
 	}
@@ -539,11 +540,8 @@ static int hsr_prp_fill_frame_info(struct hsr_prp_frame_info *frame,
 	frame->is_vlan = false;
 	proto = ethhdr->h_proto;
 
-	if (proto == htons(ETH_P_8021Q)) {
+	if (proto == htons(ETH_P_8021Q))
 		frame->is_vlan = true;
-		/* FIXME: */
-		WARN_ONCE(1, "HSR: VLAN not yet supported");
-	}
 
 	if (frame->is_vlan) {
 		vlan_hdr = (struct hsr_vlan_ethhdr *)ethhdr;
diff --git a/net/hsr-prp/hsr_prp_main.h b/net/hsr-prp/hsr_prp_main.h
index 7c07632..54f8aca 100644
--- a/net/hsr-prp/hsr_prp_main.h
+++ b/net/hsr-prp/hsr_prp_main.h
@@ -255,7 +255,6 @@ static inline u16 hsr_get_skb_sequence_nr(struct sk_buff *skb)
 {
 	struct hsr_ethhdr *hsr_ethhdr;
 
-	/* TODO will not work when vlan hdr is present */
 	hsr_ethhdr = (struct hsr_ethhdr *)skb_mac_header(skb);
 
 	return ntohs(hsr_ethhdr->hsr_tag.sequence_nr);
diff --git a/net/hsr-prp/hsr_prp_slave.c b/net/hsr-prp/hsr_prp_slave.c
index db63340..5752739 100644
--- a/net/hsr-prp/hsr_prp_slave.c
+++ b/net/hsr-prp/hsr_prp_slave.c
@@ -22,7 +22,6 @@ static rx_handler_result_t hsr_prp_handle_frame(struct sk_buff **pskb)
 	struct sk_buff *skb = *pskb;
 	struct hsr_prp_port *port;
 	struct hsr_prp_priv *priv;
-
 	u16 protocol;
 
 	rcu_read_lock(); /* hsr->node_db, hsr->ports */
@@ -40,10 +39,11 @@ static rx_handler_result_t hsr_prp_handle_frame(struct sk_buff **pskb)
 		goto finish_consume;
 	}
 
-	/* For HSR, non tagged frames are expected, but for PRP
+	/* For HSR, non tagged frames are unexpected, but for PRP
 	 * there could be non tagged frames as well.
 	 */
 	protocol = eth_hdr(skb)->h_proto;
+
 	if (protocol != htons(ETH_P_PRP) &&
 	    protocol != htons(ETH_P_HSR) &&
 	    port->priv->prot_version <= HSR_V1)
@@ -101,11 +101,6 @@ static int hsr_prp_check_dev_ok(struct net_device *dev)
 		return -EINVAL;
 	}
 
-	if (dev->priv_flags & IFF_802_1Q_VLAN) {
-		netdev_info(dev, "HSR on top of VLAN is not yet supported in this driver.\n");
-		return -EINVAL;
-	}
-
 	if (dev->priv_flags & IFF_DONT_BRIDGE) {
 		netdev_info(dev, "This device does not support bridging.\n");
 		return -EOPNOTSUPP;
-- 
1.9.1

