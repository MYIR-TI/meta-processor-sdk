From a596150390c4c3101b713b0aa18f6b1cdd182a38 Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Fri, 2 Mar 2018 11:51:24 -0500
Subject: [PATCH 192/195] prueth: move mc filter table to DRAM1 from SRAM

Firmware required some changes to the memory map to make room for
VLAN filter table in SRAM. For this, Firmware moved the MC filter table
from SRAM to DRAM1 and this patch updates the Linux code to work with the
firmware with these changes. Firmware also introduced a statistics counter
to count the dropped multicast Ethernet frames at PRU when a multicast
address hash is not set in the filter table.

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
---
 drivers/net/ethernet/ti/hsr_prp_firmware.h |  9 ++++++---
 drivers/net/ethernet/ti/prueth.c           | 13 +++++++------
 drivers/net/ethernet/ti/prueth.h           |  1 +
 drivers/net/ethernet/ti/prueth_dbgfs.c     | 10 +++++-----
 4 files changed, 19 insertions(+), 14 deletions(-)

diff --git a/drivers/net/ethernet/ti/hsr_prp_firmware.h b/drivers/net/ethernet/ti/hsr_prp_firmware.h
index 0e5865f..acf3394 100644
--- a/drivers/net/ethernet/ti/hsr_prp_firmware.h
+++ b/drivers/net/ethernet/ti/hsr_prp_firmware.h
@@ -92,15 +92,18 @@
 #define IEC62439_CONST_TRANSPARENT_RECEPTION_REMOVE_RCT 0x01
 #define IEC62439_CONST_TRANSPARENT_RECEPTION_PASS_RCT   0x02
 
-#define M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT         0x2E0
+/* PRU1 DMEM
+ * Multicast filter defines & offsets
+ */
+#define M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT         0xE0
 /* one byte field :
  * 0 -> multicast filtering disabled
  * 1 -> multicast filtering enabled
  */
 #define MULTICAST_FILTER_DISABLED                       0x00
 #define MULTICAST_FILTER_ENABLED                        0x01
-#define MULTICAST_FILTER_MASK                           0x2E4
-#define MULTICAST_FILTER_TABLE                          0x300
+#define MULTICAST_FILTER_MASK                           0xE4
+#define MULTICAST_FILTER_TABLE                          0x100
 #define MULTICAST_TABLE_SIZE                            256
 #define MULTICAST_FILTER_HOST_RCV_ALLOWED               0x01
 #define MULTICAST_FILTER_HOST_RCV_NOT_ALLOWED           0x00
diff --git a/drivers/net/ethernet/ti/prueth.c b/drivers/net/ethernet/ti/prueth.c
index 34491e0..c612d36 100644
--- a/drivers/net/ethernet/ti/prueth.c
+++ b/drivers/net/ethernet/ti/prueth.c
@@ -3038,26 +3038,26 @@ static void prueth_sw_set_rx_mode(struct prueth_emac *emac)
 {
 	struct prueth *prueth = emac->prueth;
 	struct net_device *ndev = emac->ndev;
-	void __iomem *sram = prueth->mem[PRUETH_MEM_SHARED_RAM].va;
+	void __iomem *dram1 = prueth->mem[PRUETH_MEM_DRAM1].va;
 	struct netdev_hw_addr *ha;
 	u8 hash;
 	int i;
 
 	for (i = 0; i < 6; i++)
 		writeb(prueth->sw_mc_mac_mask[i],
-		       sram + MULTICAST_FILTER_MASK + i);
+		       dram1 + MULTICAST_FILTER_MASK + i);
 
 	if (ndev->flags & IFF_ALLMULTI) {
 		writeb(MULTICAST_FILTER_DISABLED,
-		       sram + M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT);
+		       dram1 + M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT);
 		return;
 	}
 
 	/* disable all multicast hash table entries */
-	memset_io(sram + MULTICAST_FILTER_TABLE, 0, MULTICAST_TABLE_SIZE);
+	memset_io(dram1 + MULTICAST_FILTER_TABLE, 0, MULTICAST_TABLE_SIZE);
 
 	writeb(MULTICAST_FILTER_ENABLED,
-	       sram + M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT);
+	       dram1 + M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT);
 
 	if (netdev_mc_empty(ndev))
 		return;
@@ -3065,7 +3065,7 @@ static void prueth_sw_set_rx_mode(struct prueth_emac *emac)
 	netdev_for_each_mc_addr(ha, ndev) {
 		hash = get_hash_with_mask(ha->addr, prueth->sw_mc_mac_mask);
 		writeb(MULTICAST_FILTER_HOST_RCV_ALLOWED,
-		       sram + MULTICAST_FILTER_TABLE + hash);
+		       dram1 + MULTICAST_FILTER_TABLE + hash);
 	}
 }
 
@@ -3358,6 +3358,7 @@ static int emac_set_settings(struct net_device *ndev, struct ethtool_cmd *ecmd)
 	{"lreNtLookupErrA", PRUETH_LRE_STAT_OFS(node_table_lookup_error_a)},
 	{"lreNtLookupErrB", PRUETH_LRE_STAT_OFS(node_table_lookup_error_b)},
 	{"lreNodeTableFull", PRUETH_LRE_STAT_OFS(node_table_full)},
+	{"lreMulticastDropped", PRUETH_LRE_STAT_OFS(lre_multicast_dropped)},
 	{"lreTotalRxA", PRUETH_LRE_STAT_OFS(lre_total_rx_a)},
 	{"lreTotalRxB", PRUETH_LRE_STAT_OFS(lre_total_rx_b)},
 	{"lreOverflowPru0", PRUETH_LRE_STAT_OFS(lre_overflow_pru0)},
diff --git a/drivers/net/ethernet/ti/prueth.h b/drivers/net/ethernet/ti/prueth.h
index b9b357d..61854f1 100644
--- a/drivers/net/ethernet/ti/prueth.h
+++ b/drivers/net/ethernet/ti/prueth.h
@@ -249,6 +249,7 @@ struct lre_statistics {
 	u32 node_table_lookup_error_a;
 	u32 node_table_lookup_error_b;
 	u32 node_table_full;
+	u32 lre_multicast_dropped;
 
 	/* additional debug counters */
 	u32 lre_total_rx_a; /* count of all frames received at port-A */
diff --git a/drivers/net/ethernet/ti/prueth_dbgfs.c b/drivers/net/ethernet/ti/prueth_dbgfs.c
index e23fdcb..57da48e 100644
--- a/drivers/net/ethernet/ti/prueth_dbgfs.c
+++ b/drivers/net/ethernet/ti/prueth_dbgfs.c
@@ -312,16 +312,16 @@ static void prueth_hsr_prp_node_show(struct seq_file *sfp,
 prueth_hsr_prp_mc_filter_show(struct seq_file *sfp, void *data)
 {
 	struct prueth *prueth = (struct prueth *)sfp->private;
-	void __iomem *sram = prueth->mem[PRUETH_MEM_SHARED_RAM].va;
+	void __iomem *dram1 = prueth->mem[PRUETH_MEM_DRAM1].va;
 	u8 val;
 	int i;
 
-	val = readb(sram + M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT);
+	val = readb(dram1 + M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT);
 
 	seq_printf(sfp, "MC Filter : %s", val ? "enabled\n" : "disabled\n");
 	seq_puts(sfp, "MC Mask : ");
 	for (i = 0; i < 6; i++) {
-		val = readb(sram + MULTICAST_FILTER_MASK + i);
+		val = readb(dram1 + MULTICAST_FILTER_MASK + i);
 		if (i == 5)
 			seq_printf(sfp, "%x", val);
 		else
@@ -329,12 +329,12 @@ static void prueth_hsr_prp_node_show(struct seq_file *sfp,
 	}
 	seq_puts(sfp, "\n");
 
-	val = readb(sram + M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT);
+	val = readb(dram1 + M_MULTICAST_TABLE_SEARCH_OP_CONTROL_BIT);
 	seq_puts(sfp, "MC Filter table below 1 - Allowed, 0 - Dropped\n");
 
 	if (val) {
 		for (i = 0; i < MULTICAST_TABLE_SIZE; i++) {
-			val = readb(sram + MULTICAST_FILTER_TABLE + i);
+			val = readb(dram1 + MULTICAST_FILTER_TABLE + i);
 			if (!(i % 16))
 				seq_printf(sfp, "\n%3x: ", i);
 			seq_printf(sfp, "%d ", val);
-- 
1.9.1

