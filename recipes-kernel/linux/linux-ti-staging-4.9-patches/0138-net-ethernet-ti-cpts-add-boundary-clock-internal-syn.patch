From 6acb4eb9609cd2a0e3e07a14ecd489c5e7b13092 Mon Sep 17 00:00:00 2001
From: WingMan Kwok <w-kwok2@ti.com>
Date: Thu, 14 Dec 2017 18:28:59 -0500
Subject: [PATCH 138/140] net: ethernet: ti: cpts: add boundary clock internal
 sync control

Enhanced CPTS driver so that if it is a "sub-clock" of a PTP
boundary clock on AM572x, it requests permission from the PTP
BC driver before it can enable 1PPS for sub-clock internal sync
purpose.

Signed-off-by: WingMan Kwok <w-kwok2@ti.com>
---
 drivers/net/ethernet/ti/cpts.c | 14 ++++++++++++++
 drivers/net/ethernet/ti/cpts.h |  1 +
 2 files changed, 15 insertions(+)

diff --git a/drivers/net/ethernet/ti/cpts.c b/drivers/net/ethernet/ti/cpts.c
index 4b03924..03c7929 100644
--- a/drivers/net/ethernet/ti/cpts.c
+++ b/drivers/net/ethernet/ti/cpts.c
@@ -33,6 +33,7 @@
 #include <linux/of_irq.h>
 
 #include "cpts.h"
+#include "ptp_bc.h"
 
 #define CPTS_SKB_TX_WORK_TIMEOUT 1 /* jiffies */
 
@@ -578,6 +579,7 @@ static int cpts_ptp_enable(struct ptp_clock_info *ptp,
 	struct cpts *cpts = container_of(ptp, struct cpts, info);
 	struct timespec64 ts;
 	s64 ns;
+	bool ok;
 
 	switch (rq->type) {
 	case PTP_CLK_REQ_EXTTS:
@@ -586,6 +588,13 @@ static int cpts_ptp_enable(struct ptp_clock_info *ptp,
 			on);
 		return cpts_extts_enable(cpts, rq->extts.index, on);
 	case PTP_CLK_REQ_PPS:
+		if (cpts->use_1pps) {
+			ok = ptp_bc_clock_sync_enable(cpts->bc_clkid, on);
+			if (!ok) {
+				pr_info("cpts error: bc clk sync pps enable denied\n");
+				return -EBUSY;
+			}
+		}
 		return cpts_pps_enable(cpts, on);
 	case PTP_CLK_REQ_PEROUT:
 		/* this enables a pps for external measurement */
@@ -797,6 +806,11 @@ int cpts_register(struct cpts *cpts)
 	ptp_schedule_worker(cpts->clock, cpts->ov_check_period);
 	cpts_write32(cpts, cpts_read32(cpts, control) |
 		     HW4_TS_PUSH_EN, control);
+
+	if (cpts->use_1pps)
+		cpts->bc_clkid = ptp_bc_clock_register();
+
+	pr_info("cpts ptp bc clkid %d\n", cpts->bc_clkid);
 	return 0;
 
 err_ptp:
diff --git a/drivers/net/ethernet/ti/cpts.h b/drivers/net/ethernet/ti/cpts.h
index 9e2861c..95c5574 100644
--- a/drivers/net/ethernet/ti/cpts.h
+++ b/drivers/net/ethernet/ti/cpts.h
@@ -165,6 +165,7 @@ struct cpts {
 
 	int pps_tmr_irqn;
 	int pps_latch_irqn;
+	int bc_clkid;
 
 	struct kthread_worker *pps_kworker;
 	struct kthread_delayed_work pps_work;
-- 
1.9.1

