From 0ba67341ef24a63b841251bc5ae2e69d055d65c0 Mon Sep 17 00:00:00 2001
From: Murali Karicheri <m-karicheri2@ti.com>
Date: Tue, 12 Sep 2017 11:28:53 -0400
Subject: [PATCH 62/86] hsr/prp: improvements to lre statistics handling

Add a statistics for number of supervisor frames send by the driver
so that better accounting can be done for number of supervisor frames
vs others. While at it also fix the cnt_tx_c,cnt_rx_c statistics
counters. As per IEC62439 specification, TXC is number of frames sent
to application interface and RXC is number of frames received at the
interface. Present code does it in the reverse way. So fix the
same by interchanging the variable displayed as part of lre statistics.

Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
---
 net/hsr-prp/hsr_prp_debugfs.c | 13 ++++++++++---
 net/hsr-prp/hsr_prp_device.c  |  1 +
 net/hsr-prp/hsr_prp_main.h    |  2 ++
 3 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/net/hsr-prp/hsr_prp_debugfs.c b/net/hsr-prp/hsr_prp_debugfs.c
index fb53ad6..e03cf46 100644
--- a/net/hsr-prp/hsr_prp_debugfs.c
+++ b/net/hsr-prp/hsr_prp_debugfs.c
@@ -94,17 +94,24 @@ static void print_mac_address(struct seq_file *sfp, unsigned char *mac)
 	master = hsr_prp_get_port(priv, HSR_PRP_PT_MASTER);
 	rcu_read_unlock();
 
-	seq_puts(sfp, "Stats entries\n");
+	seq_puts(sfp, "LRE Stats entries\n");
 	seq_printf(sfp, "cnt_tx_a = %d\n", priv->stats.cnt_tx_a);
 	seq_printf(sfp, "cnt_tx_b = %d\n", priv->stats.cnt_tx_b);
-	seq_printf(sfp, "cnt_tx_c = %ld\n", master->dev->stats.tx_packets);
+	/* actually lre_tx_c is whatever sent to the application interface. So
+	 * same as rx_packets
+	 */
+	seq_printf(sfp, "cnt_tx_c = %ld\n", master->dev->stats.rx_packets);
+	seq_printf(sfp, "cnt_tx_sup = %d\n", priv->stats.cnt_tx_sup);
 	seq_printf(sfp, "cnt_rx_wrong_lan_a = %d\n",
 		   priv->stats.cnt_rx_wrong_lan_a);
 	seq_printf(sfp, "cnt_rx_wrong_lan_b = %d\n",
 		   priv->stats.cnt_rx_wrong_lan_b);
 	seq_printf(sfp, "cnt_rx_a = %d\n", priv->stats.cnt_rx_a);
 	seq_printf(sfp, "cnt_rx_b = %d\n", priv->stats.cnt_rx_b);
-	seq_printf(sfp, "cnt_rx_c = %ld\n", master->dev->stats.rx_packets);
+	/* actually lre_rx_c is whatever received from the application
+	 * interface,  So same as tx_packets
+	 */
+	seq_printf(sfp, "cnt_rx_c = %ld\n", master->dev->stats.tx_packets);
 	seq_printf(sfp, "cnt_rx_errors_a = %d\n", priv->stats.cnt_rx_errors_a);
 	seq_printf(sfp, "cnt_rx_errors_b = %d\n", priv->stats.cnt_rx_errors_b);
 	if (priv->prot_version <= HSR_V1) {
diff --git a/net/hsr-prp/hsr_prp_device.c b/net/hsr-prp/hsr_prp_device.c
index 184dce8..0254d1b 100644
--- a/net/hsr-prp/hsr_prp_device.c
+++ b/net/hsr-prp/hsr_prp_device.c
@@ -340,6 +340,7 @@ static void send_supervision_frame(struct hsr_prp_port *master,
 	}
 	spin_unlock_irqrestore(&master->priv->seqnr_lock, irqflags);
 	hsr_prp_forward_skb(skb, master);
+	INC_CNT_TX_SUP(master->priv);
 	return;
 
 out:
diff --git a/net/hsr-prp/hsr_prp_main.h b/net/hsr-prp/hsr_prp_main.h
index 84c5fe9..e8137d4 100644
--- a/net/hsr-prp/hsr_prp_main.h
+++ b/net/hsr-prp/hsr_prp_main.h
@@ -199,6 +199,7 @@ struct hsr_prp_lre_if_stats {
 	u32	cnt_rx_errors_b;
 	u32	cnt_own_rx_a; /* For HSR only */
 	u32	cnt_own_rx_b; /* For HSR only */
+	u32	cnt_tx_sup;
 };
 
 struct hsr_prp_port {
@@ -326,6 +327,7 @@ static inline bool prp_check_lsdu_size(struct sk_buff *skb,
 		priv->stats.cnt_rx_errors_a++ : priv->stats.cnt_rx_errors_b++)
 #define INC_CNT_OWN_RX(type, priv) (((type) == HSR_PRP_PT_SLAVE_A) ? \
 		priv->stats.cnt_own_rx_a++ : priv->stats.cnt_own_rx_b++)
+#define INC_CNT_TX_SUP(priv) ((priv)->stats.cnt_tx_sup++)
 
 #if IS_ENABLED(CONFIG_DEBUG_FS)
 int hsr_prp_debugfs_init(struct hsr_prp_priv *priv,
-- 
1.9.1

