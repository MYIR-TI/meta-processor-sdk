From 0acedb9782d8beb42c8fbb51acaeca6b646c8511 Mon Sep 17 00:00:00 2001
From: WingMan Kwok <w-kwok2@ti.com>
Date: Wed, 20 Dec 2017 02:54:18 -0500
Subject: [PATCH 142/143] net: ethernet: ti: iep: release iep pinctrl resource
 when prueth is removed

Before this patch, iep pinctrl resource is released when a prueth port
is configured down. But IEP module is shared between prueth ports. Thus
IEP pinctrl resource should only be releaseed when prueth driver is removed.
This patch makes changes for that.

Signed-off-by: WingMan Kwok <w-kwok2@ti.com>
---
 drivers/net/ethernet/ti/iep.c    | 18 +++++++++++++-----
 drivers/net/ethernet/ti/prueth.c |  1 +
 2 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/ti/iep.c b/drivers/net/ethernet/ti/iep.c
index 154689a..cb66388 100644
--- a/drivers/net/ethernet/ti/iep.c
+++ b/drivers/net/ethernet/ti/iep.c
@@ -907,7 +907,6 @@ void iep_unregister(struct iep *iep)
 	for (i = 0; i < MAX_PPS; i++)
 		iep_pps_stop(iep, i);
 
-	devm_pinctrl_put(iep->pins);
 	iep_time_sync_stop(iep);
 	ptp_clock_unregister(iep->ptp_clock);
 	iep->ptp_clock = NULL;
@@ -921,14 +920,17 @@ static int iep_get_pps_extts_pins(struct iep *iep)
 {
 	struct pinctrl_state *on, *off;
 	u32 has_on_off;
+	struct pinctrl *pins;
 
-	iep->pins = devm_pinctrl_get(iep->dev);
-	if (IS_ERR(iep->pins)) {
+	pins = devm_pinctrl_get(iep->dev);
+	if (IS_ERR(pins)) {
+		iep->pins = NULL;
 		dev_err(iep->dev, "request for sync latch pins failed: %ld\n",
-			PTR_ERR(iep->pins));
-		return PTR_ERR(iep->pins);
+			PTR_ERR(pins));
+		return PTR_ERR(pins);
 	}
 
+	iep->pins = pins;
 	has_on_off = 0;
 
 	on = pinctrl_lookup_state(iep->pins, "sync0_on");
@@ -1019,3 +1021,9 @@ struct iep *iep_create(struct device *dev, void __iomem *sram,
 
 	return iep;
 }
+
+void iep_release(struct iep *iep)
+{
+	if (iep->pins)
+		devm_pinctrl_put(iep->pins);
+}
diff --git a/drivers/net/ethernet/ti/prueth.c b/drivers/net/ethernet/ti/prueth.c
index fb6a4fa..b965c8a 100644
--- a/drivers/net/ethernet/ti/prueth.c
+++ b/drivers/net/ethernet/ti/prueth.c
@@ -4813,6 +4813,7 @@ static int prueth_remove(struct platform_device *pdev)
 	struct prueth *prueth = platform_get_drvdata(pdev);
 	int i;
 
+	iep_release(prueth->iep);
 	prueth_hsr_prp_debugfs_term(prueth);
 	prueth->tbl_check_period = 0;
 
-- 
1.9.1

