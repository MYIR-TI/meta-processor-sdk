From fd5b90c469a3d0988fe4a4cdd6a0d9f3b4808cf4 Mon Sep 17 00:00:00 2001
From: Vitaly Andrianov <vitalya@ti.com>
Date: Mon, 29 Jan 2018 09:27:04 -0500
Subject: [PATCH 186/186] prueth: wait firmware finished using the node table
 before clearing it

If the firmware updated the node table, we need to wait before clearing it.

Signed-off-by: Vitaly Andrianov <vitalya@ti.com>
---
 drivers/net/ethernet/ti/prueth.c          | 5 ++++-
 drivers/net/ethernet/ti/prueth_node_tbl.c | 2 +-
 drivers/net/ethernet/ti/prueth_node_tbl.h | 1 +
 3 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/ti/prueth.c b/drivers/net/ethernet/ti/prueth.c
index 216772841..5441893 100644
--- a/drivers/net/ethernet/ti/prueth.c
+++ b/drivers/net/ethernet/ti/prueth.c
@@ -1036,10 +1036,13 @@ static enum hrtimer_restart prueth_red_table_timer(struct hrtimer *timer)
 		return HRTIMER_RESTART;
 
 	if (prueth->node_table_clear) {
+		pru_spin_lock(prueth->nt);
 		spin_lock_irqsave(&prueth->nt_lock, flags);
 		node_table_init(prueth);
 		spin_unlock_irqrestore(&prueth->nt_lock, flags);
-
+		/* we don't have to release the prueth lock
+		 * the note_table_init() cleares it anyway
+		 */
 		prueth->node_table_clear = 0;
 	} else {
 		prueth->tbl_check_mask &= ~HOST_TIMER_NODE_TABLE_CLEAR_BIT;
diff --git a/drivers/net/ethernet/ti/prueth_node_tbl.c b/drivers/net/ethernet/ti/prueth_node_tbl.c
index 57aec8a..be2c71b 100644
--- a/drivers/net/ethernet/ti/prueth_node_tbl.c
+++ b/drivers/net/ethernet/ti/prueth_node_tbl.c
@@ -39,7 +39,7 @@ static u16 get_hash(u8 *mac)
 	return hash;
 }
 
-static void pru_spin_lock(struct node_tbl *nt)
+void pru_spin_lock(struct node_tbl *nt)
 {
 	while (1) {
 		nt->arm_lock = 1;
diff --git a/drivers/net/ethernet/ti/prueth_node_tbl.h b/drivers/net/ethernet/ti/prueth_node_tbl.h
index e0f324a..0f640de 100644
--- a/drivers/net/ethernet/ti/prueth_node_tbl.h
+++ b/drivers/net/ethernet/ti/prueth_node_tbl.h
@@ -97,6 +97,7 @@ int node_table_insert(struct prueth *prueth, u8 *mac, int port, int sv_frame,
 		      int proto, spinlock_t *lock);
 
 void pop_queue_process(struct prueth *prueth, spinlock_t *lock);
+void pru_spin_lock(struct node_tbl *nt);
 
 extern const struct file_operations prueth_nt_index_fops;
 extern const struct file_operations prueth_nt_bins_fops;
-- 
1.9.1

