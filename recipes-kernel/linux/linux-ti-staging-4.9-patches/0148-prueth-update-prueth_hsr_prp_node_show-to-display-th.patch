From 721957280dca659dd32666906c7687c403161330 Mon Sep 17 00:00:00 2001
From: Vitaly Andrianov <vitalya@ti.com>
Date: Sat, 23 Dec 2017 09:43:44 -0500
Subject: [PATCH] prueth: update prueth_hsr_prp_node_show to display the new
 node table

This patch update prueth_hsr_prp_node_show() to display the contents of
the new node table.

Signed-off-by: Vitaly Andrianov <vitalya@ti.com>
Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
---
 drivers/net/ethernet/ti/prueth.c | 59 +++++++++++++++++++---------------------
 1 file changed, 28 insertions(+), 31 deletions(-)

diff --git a/drivers/net/ethernet/ti/prueth.c b/drivers/net/ethernet/ti/prueth.c
index b4db51f..0c8941d 100644
--- a/drivers/net/ethernet/ti/prueth.c
+++ b/drivers/net/ethernet/ti/prueth.c
@@ -470,22 +470,27 @@ static int prueth_debugfs_init(struct prueth_emac *emac)
 }
 
 static void prueth_hsr_prp_node_show(struct seq_file *sfp,
-				     struct prueth *prueth, u8 index)
+				     struct prueth *prueth, int index)
 {
-	void __iomem *sram = prueth->mem[PRUETH_MEM_SHARED_RAM].va;
-	struct prueth_hsr_prp_node ent;
+	struct node_tbl *nt = prueth->nt;
+	struct bin_tbl_t *bin = &nt->bin_tbl[index];
+	struct node_tbl_t *node;
 	u8 val, is_hsr;
 
+	BUG_ON(bin->node_tbl_offset >= NODE_TBL_MAX_ENTRIES);
+
+	node = &nt->node_tbl[bin->node_tbl_offset];
+
 	seq_printf(sfp, "\nNode[%u]:\n", index);
-	memcpy_fromio(&ent, sram + NODE_TABLE + index * 32, 32);
 	seq_printf(sfp, "MAC ADDR: %02x:%02x:%02x:%02x:%02x:%02x\n",
-		   ent.mac[3], ent.mac[2], ent.mac[1],
-		   ent.mac[0], ent.mac[5], ent.mac[4]);
+		   bin->src_mac_id[3], bin->src_mac_id[2],
+		   bin->src_mac_id[1], bin->src_mac_id[0],
+		   bin->src_mac_id[5], bin->src_mac_id[4]);
 	seq_printf(sfp, "state: %s\n",
-		   ((ent.state & 0x1) ? "valid" : "invalid"));
+		   ((node->entry_state & 0x1) ? "valid" : "invalid"));
 
 	if (PRUETH_HAS_PRP(prueth)) {
-		val = (ent.status & NT_REM_NODE_DUP_MASK);
+		val = (node->status & NT_REM_NODE_DUP_MASK);
 		switch (val) {
 		case NT_REM_NODE_DUP_DISCARD:
 			seq_printf(sfp, "DupDiscard (0x%02x)\n", val);
@@ -499,8 +504,8 @@ static void prueth_hsr_prp_node_show(struct seq_file *sfp,
 		}
 	}
 
-	is_hsr = ent.status & NT_REM_NODE_HSR_BIT;
-	val = (ent.status & NT_REM_NODE_TYPE_MASK) >> NT_REM_NODE_TYPE_SHIFT;
+	is_hsr = node->status & NT_REM_NODE_HSR_BIT;
+	val = (node->status & NT_REM_NODE_TYPE_MASK) >> NT_REM_NODE_TYPE_SHIFT;
 	switch (val) {
 	case NT_REM_NODE_TYPE_SANA:
 		seq_puts(sfp, "SAN A\n");
@@ -534,16 +539,16 @@ static void prueth_hsr_prp_node_show(struct seq_file *sfp,
 		break;
 	}
 
-	seq_printf(sfp, "RxA=%u SupRxA=%u\n", ent.cnt_rx_a, ent.cnt_rx_sup_a);
-	seq_printf(sfp, "RxB=%u SupRxB=%u\n", ent.cnt_rx_b, ent.cnt_rx_sup_b);
+	seq_printf(sfp, "RxA=%u SupRxA=%u\n", node->cnt_ra, node->cnt_rx_sup_a);
+	seq_printf(sfp, "RxB=%u SupRxB=%u\n", node->cnt_rb, node->cnt_rx_sup_b);
 
 	seq_printf(sfp, "Time Last Seen: Sup=%u RxA=%u RxB=%u\n",
-		   ent.time_last_seen_sup, ent.time_last_seen_a,
-		   ent.time_last_seen_b);
+		   node->time_last_seen_s, node->time_last_seen_a,
+		   node->time_last_seen_b);
 
 	if (prueth->eth_type == PRUSS_ETHTYPE_PRP)
 		seq_printf(sfp, "PRP LineID Err: A=%u B=%u\n",
-			   ent.prp_lid_err_a, ent.prp_lid_err_b);
+			   node->err_wla, node->err_wlb);
 }
 
 /* prueth_hsr_prp_node_table_show - Formats and prints node_table entries
@@ -552,26 +557,18 @@ static void prueth_hsr_prp_node_show(struct seq_file *sfp,
 prueth_hsr_prp_node_table_show(struct seq_file *sfp, void *data)
 {
 	struct prueth *prueth = (struct prueth *)sfp->private;
-	void __iomem *sram = prueth->mem[PRUETH_MEM_SHARED_RAM].va;
-	u8 i, index;
+	struct node_tbl *nt = prueth->nt;
+	int j;
 	u32 nodes;
 
-	nodes = readl(sram + LRE_CNT_NODES);
-	seq_printf(sfp, "\nRemote nodes in network: %u\n", nodes);
-
-	for (i = 0; i < nodes + 2; i++) {
-		index = readb(sram + INDEX_ARRAY + i);
+	nodes = nt->lre_cnt;
+	seq_printf(sfp, "\nRemote nodes in network: %u\n", nt->lre_cnt);
 
-		if (!index)
-			/* first index guard */
-			continue;
-
-		if (index == NODE_TABLE_SIZE_MAX + 1)
-			/* last index guard */
-			break;
-
-		prueth_hsr_prp_node_show(sfp, prueth, index);
+	for (j = 0; j < BIN_TBL_MAX_ENTRIES; j++) {
+		if (nt->bin_tbl[j].node_tbl_offset < NODE_TBL_MAX_ENTRIES)
+			prueth_hsr_prp_node_show(sfp, prueth, j);
 	}
+
 	seq_puts(sfp, "\n");
 	return 0;
 }
-- 
1.9.1

