From d2173d89654c200e3c31d45f65d8763ca136138b Mon Sep 17 00:00:00 2001
From: WingMan Kwok <w-kwok2@ti.com>
Date: Thu, 15 Sep 2016 12:45:13 -0400
Subject: [PATCH 50/50] net: netcp: ethss: Do not read 10gbe pcsr reg if no
 serdes phy defined

If there is no serdes phy defined, i.e. no individual SerDes
lane enabling is allowed, there is no point to read the PCSR
status register to determine the link status. This is the case
when 10gbe MCU firmware is used in configuring the 10gbe
SerDes. This patch implements the above mentioned changes.

Signed-off-by: WingMan Kwok <w-kwok2@ti.com>
Signed-off-by: Michael Scherban <m-scherban@ti.com>
Signed-off-by: Jacob Stiffler <j-stiffler@ti.com>
---
 drivers/net/ethernet/ti/netcp_ethss.c | 23 ++++++++++++++---------
 1 file changed, 14 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/ti/netcp_ethss.c b/drivers/net/ethernet/ti/netcp_ethss.c
index a3e43db..787d82f 100644
--- a/drivers/net/ethernet/ti/netcp_ethss.c
+++ b/drivers/net/ethernet/ti/netcp_ethss.c
@@ -138,6 +138,8 @@
 #define	GBE_RXHOOK_ORDER			0
 #define GBE_DEFAULT_ALE_AGEOUT			30
 #define SLAVE_LINK_IS_XGMII(s) ((s)->link_interface >= XGMII_LINK_MAC_PHY)
+#define SLAVE_LINK_IS_XGMII_MAC_MAC(s) \
+	((s)->link_interface == XGMII_LINK_MAC_MAC_FORCED)
 #define SLAVE_LINK_IS_RGMII(s) \
 	(((s)->link_interface >= RGMII_LINK_MAC_PHY) && \
 	 ((s)->link_interface <= RGMII_LINK_MAC_PHY_NO_MDIO))
@@ -1926,6 +1928,13 @@ static void netcp_ethss_link_state_action(struct gbe_priv *gbe_dev,
 	} else if (slave->link_interface == XGMII_LINK_MAC_MAC_FORCED) {
 		netdev_printk(KERN_INFO, ndev,
 			      "Link is %s\n", (up ? "Up" : "Down"));
+
+		/* start recover process only if there is a
+		 * serdes phy to recover
+		 */
+		if (!slave->serdes_phy)
+			return;
+
 		if (up) {
 			if (slave->link_recover_thresh ||
 			    slave->link_recovering) {
@@ -1990,7 +1999,7 @@ static void netcp_ethss_update_link_state(struct gbe_priv *gbe_dev,
 		} else
 			sw_link_state = netcp_sgmii_get_port_link(
 						SGMII_BASE(gbe_dev, sp), sp);
-	} else if (slave->link_interface == XGMII_LINK_MAC_MAC_FORCED) {
+	} else if (SLAVE_LINK_IS_XGMII_MAC_MAC(slave) && slave->serdes_phy) {
 		/* read status from pcsr status reg */
 		ret = regmap_read(gbe_dev->pcsr_regmap,
 				  XGBE10_PCSR_RX_STATUS(sp), &stat);
@@ -2008,14 +2017,10 @@ static void netcp_ethss_update_link_state(struct gbe_priv *gbe_dev,
 	if (atomic_xchg(&slave->link_state, link_state) != link_state) {
 		netcp_ethss_link_state_action(gbe_dev, ndev, slave,
 					      link_state);
-	} else {
-		if (slave->link_recover_thresh) {
-			if (++slave->link_recovering >=
-					slave->link_recover_thresh) {
-				schedule_delayed_work(&slave->link_recover_work,
-						      0);
-				slave->link_recovering = 1;
-			}
+	} else if (slave->serdes_phy && slave->link_recover_thresh) {
+		if (++slave->link_recovering >= slave->link_recover_thresh) {
+			schedule_delayed_work(&slave->link_recover_work, 0);
+			slave->link_recovering = 1;
 		}
 	}
 }
-- 
1.9.1

